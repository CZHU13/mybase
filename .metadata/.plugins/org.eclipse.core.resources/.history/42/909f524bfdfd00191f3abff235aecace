package cn.red.jdbc;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.SQLException;

/**
 * 
 * @author zc285
 * JDBC操作数据库步骤
 * 1.注册驱动
          告知JVM使用的是哪一个数据库驱动
 * 2.获取连接
    使用JDBC中类，完成对mysql数据库的连接
   3.获取语言执行平台
   获取连接对象获取对SQL语句的执行对象
   4.执行sql语句
   使用执行者对象，向数据库执行SQL语句
   5.处理结果
   6.释放资源 一堆close
 */
public class JDBCDemo {
	public static void main(String[] args) throws SQLException, ClassNotFoundException {
		//1.注册驱动
	    //使用java.sql.DriverManager类静态方法registerDriver(Driver driver);
		//Driver又是一个接口，参数传递，MySQL驱动程序的实现类com.mysql.jdbc.Driver
		//DriverManager.registerDriver(new Driver());
		//驱动类源代码，注册2次驱动程序
		Class.forName("com.mysql.cj.jdbc.Driver");
		
		/*
		 * 2.获得数据库的连接
		 * DriverManager.getConnection(String url, String user, String password),获取
		 * 返回值是Connection接口的实现类，在mysql驱动程序中
		jdbc:mysql://ip地址:端口号/数据库名
	    @CallerSensitive
	    public static Connection getConnection(String url,
	        String user, String password) throws SQLException {
	        java.util.Properties info = new java.util.Properties();
	
	        if (user != null) {
	            info.put("user", user);
	        }
	        if (password != null) {
	            info.put("password", password);
	        }
	
	        return (getConnection(url, info, Reflection.getCallerClass()));
	    }
		 */
		String url = "jdbc:mysql://localhost:3306/mybase?serverTimezone=UTC";
		String username = "root";
		String password = "199307";
		Connection conn = DriverManager.getConnection(url, username, password);
		System.out.println(conn);
		
		
	}
}
